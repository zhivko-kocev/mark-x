package com.example.spring_csr.controllers;

import com.example.spring_csr.models.{{ModelName}};
import com.example.spring_csr.services.{{ModelName}}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/{{modelName}}s")
public class {{ModelName}}Controller {

    private final {{ModelName}}Service {{modelName}}Service;

    @Autowired
    public {{ModelName}}Controller({{ModelName}}Service {{modelName}}Service) {
        this.{{modelName}}Service = {{modelName}}Service;
    }

    @GetMapping
    public List<{{ModelName}}> getAll{{ModelName}}s() {
        return {{modelName}}Service.getAll{{ModelName}}s();
    }

    @GetMapping("/{id}")
    public ResponseEntity<{{ModelName}}> get{{ModelName}}ById(@PathVariable Long id) {
        return {{modelName}}Service.get{{ModelName}}ById(id)
            .map(ResponseEntity::ok)
            .orElse(ResponseEntity.notFound().build());
    }

    @PostMapping
    public {{ModelName}} create{{ModelName}}(@RequestBody {{ModelName}} {{modelName}}) {
        return {{modelName}}Service.create{{ModelName}}({{modelName}});
    }

    @PutMapping("/{id}")
    public ResponseEntity<{{ModelName}}> update{{ModelName}}(@PathVariable Long id, @RequestBody {{ModelName}} {{modelName}}Details) {
        return {{modelName}}Service.update{{ModelName}}(id, {{modelName}}Details)
            .map(ResponseEntity::ok)
            .orElse(ResponseEntity.notFound().build());
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> delete{{ModelName}}(@PathVariable Long id) {
        return {{modelName}}Service.delete{{ModelName}}(id)
            ? ResponseEntity.ok().build()
            : ResponseEntity.notFound().build();
    }
}