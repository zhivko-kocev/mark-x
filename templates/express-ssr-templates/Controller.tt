const {{ModelName}} = require('../models/{{modelName}}');

exports.getAll{{ModelName}}s = async (req, res) => {
  try {
    const {{modelName}}s = await {{ModelName}}.find();
    res.render('{{modelName}}s/index', { {{modelName}}s });
  } catch (error) {
    res.status(500).send(error.message);
  }
};

exports.get{{ModelName}}ById = async (req, res) => {
  try {
    const {{modelName}} = await {{ModelName}}.findById(req.params.id);
    if (!{{modelName}}) {
      return res.status(404).send('{{ModelName}} not found');
    }
    res.render('{{modelName}}s/show', { {{modelName}} });
  } catch (error) {
    res.status(500).send(error.message);
  }
};

exports.new{{ModelName}}Form = (req, res) => {
  res.render('{{modelName}}s/new');
};

exports.create{{ModelName}} = async (req, res) => {
  try {
    const new{{ModelName}} = new {{ModelName}}(req.body);
    await new{{ModelName}}.save();
    res.redirect('/{{modelName}}s');
  } catch (error) {
    res.status(400).render('{{modelName}}s/new', { error: error.message });
  }
};

exports.edit{{ModelName}}Form = async (req, res) => {
  try {
    const {{modelName}} = await {{ModelName}}.findById(req.params.id);
    if (!{{modelName}}) {
      return res.status(404).send('{{ModelName}} not found');
    }
    res.render('{{modelName}}s/edit', { {{modelName}} });
  } catch (error) {
    res.status(500).send(error.message);
  }
};

exports.update{{ModelName}} = async (req, res) => {
  try {
    const {{modelName}} = await {{ModelName}}.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true });
    if (!{{modelName}}) {
      return res.status(404).send('{{ModelName}} not found');
    }
    res.redirect(`/{{modelName}}s/${{{modelName}}.id}`);
  } catch (error) {
    res.status(400).render('{{modelName}}s/edit', { {{modelName}}: req.body, error: error.message });
  }
};

exports.delete{{ModelName}} = async (req, res) => {
  try {
    const {{modelName}} = await {{ModelName}}.findByIdAndDelete(req.params.id);
    if (!{{modelName}}) {
      return res.status(404).send('{{ModelName}} not found');
    }
    res.redirect('/{{modelName}}s');
  } catch (error) {
    res.status(500).send(error.message);
  }
};